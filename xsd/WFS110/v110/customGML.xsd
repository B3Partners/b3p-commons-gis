<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 rel. 3 U (http://www.altova.com) by Chris Van Lith (B3Partners BV) -->
<xs:schema xmlns="http://www.opengis.net/gml" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.opengis.net/gml" elementFormDefault="qualified" version="1.1.0">
	<xs:element name="_FeatureCollection" type="xs:anyType"/>
	<xs:element name="_Geometry" type="xs:anyType"/>
	<xs:element name="Envelope" type="xs:anyType"/>
	<xs:group name="StandardObjectProperties">
		<xs:annotation>
			<xs:documentation>This content model group makes it easier to construct types that 
      derive from AbstractGMLType and its descendents "by restriction".  
      A reference to the group saves having to enumerate the standard object properties.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="metaDataProperty" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="description" minOccurs="0"/>
			<xs:element ref="name" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:attribute name="id" type="xs:anySimpleType">
		<xs:annotation>
			<xs:documentation>Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.</xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:complexType name="AbstractGMLType" abstract="true">
		<xs:annotation>
			<xs:documentation>All complexContent GML elements are directly or indirectly derived from this abstract supertype 
	to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. 
	Elements in this hierarchy may have an ID and are thus referenceable.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="StandardObjectProperties"/>
		</xs:sequence>
		<xs:attribute name="id" use="optional"/>
	</xs:complexType>
	<xs:complexType name="AbstractFeatureType" abstract="true">
		<xs:complexContent>
			<xs:extension base="AbstractGMLType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AbstractFeatureCollectionType" abstract="true">
		<xs:complexContent>
			<xs:extension base="AbstractFeatureType"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="_Feature" type="xs:anyType"/>
	<xs:element name="metaDataProperty" type="xs:anyType"/>
	<xs:element name="description" type="xs:anyType"/>
	<xs:element name="name" type="xs:anyType"/>
	<xs:element name="boundedBy" type="xs:anyType"/>
	<xs:element name="location" type="xs:anyType"/>
</xs:schema>
