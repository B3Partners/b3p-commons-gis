/*
 * This class was automatically generated with 
 * <a href="http://www.castor.org">Castor 1.0.2</a>, using an XML
 * Schema.
 * $Id$
 */

package nl.b3p.xml.wfs.v100.transaction;

  //---------------------------------/
 //- Imported classes and packages -/
//---------------------------------/

import java.util.Collections;
import org.exolab.castor.xml.Marshaller;
import org.exolab.castor.xml.Unmarshaller;

/**
 * A GetFeatureWithLock request operates identically to a
 *  GetFeature request expect that it attempts to lock the
 *  feature instances in the result set and includes a lock
 *  identifier in its response to a client. A lock identifier
 *  is an identifier generated by a Web Feature Service that 
 *  a client application can use, in subsequent operations,
 *  to reference the locked set of feature instances.
 *  
 * 
 * @version $Revision$ $Date$
 */
public class GetFeatureWithLockType implements java.io.Serializable {


      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field _version
     */
    private java.lang.String _version = "1.0.0";

    /**
     * Field _service
     */
    private java.lang.String _service = "WFS";

    /**
     * Field _handle
     */
    private java.lang.String _handle;

    /**
     * Field _expiry
     */
    private int _expiry;

    /**
     * keeps track of state for field: _expiry
     */
    private boolean _has_expiry;

    /**
     * Field _outputFormat
     */
    private java.lang.String _outputFormat = "GML2";

    /**
     * Field _maxFeatures
     */
    private int _maxFeatures;

    /**
     * keeps track of state for field: _maxFeatures
     */
    private boolean _has_maxFeatures;

    /**
     * The Query element is used to describe a single query.
     *  One or more Query elements can be specified inside a
     *  GetFeature element so that multiple queries can be 
     *  executed in one request. The output from the various
     *  queries are combined in a wfs:FeatureCollection element
     *  to form the response to the request.
     *  
     */
    private java.util.ArrayList _queryList;


      //----------------/
     //- Constructors -/
    //----------------/

    public GetFeatureWithLockType() 
     {
        super();
        setVersion("1.0.0");
        setService("WFS");
        setOutputFormat("GML2");
        _queryList = new java.util.ArrayList();
    } //-- nl.b3p.xml.wfs.v100.transaction.GetFeatureWithLockType()


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method addQuery
     * 
     * 
     * 
     * @param vQuery
     */
    public void addQuery(nl.b3p.xml.wfs.v100.transaction.Query vQuery)
        throws java.lang.IndexOutOfBoundsException
    {
        _queryList.add(vQuery);
    } //-- void addQuery(nl.b3p.xml.wfs.v100.transaction.Query) 

    /**
     * Method addQuery
     * 
     * 
     * 
     * @param index
     * @param vQuery
     */
    public void addQuery(int index, nl.b3p.xml.wfs.v100.transaction.Query vQuery)
        throws java.lang.IndexOutOfBoundsException
    {
        _queryList.add(index, vQuery);
    } //-- void addQuery(int, nl.b3p.xml.wfs.v100.transaction.Query) 

    /**
     * Method clearQuery
     * 
     */
    public void clearQuery()
    {
        _queryList.clear();
    } //-- void clearQuery() 

    /**
     * Method deleteExpiry
     * 
     */
    public void deleteExpiry()
    {
        this._has_expiry= false;
    } //-- void deleteExpiry() 

    /**
     * Method deleteMaxFeatures
     * 
     */
    public void deleteMaxFeatures()
    {
        this._has_maxFeatures= false;
    } //-- void deleteMaxFeatures() 

    /**
     * Method enumerateQuery
     * 
     * 
     * 
     * @return Enumeration
     */
    public java.util.Enumeration enumerateQuery()
    {
        return Collections.enumeration(_queryList);
    } //-- java.util.Enumeration enumerateQuery() 

    /**
     * Returns the value of field 'expiry'.
     * 
     * @return int
     * @return the value of field 'expiry'.
     */
    public int getExpiry()
    {
        return this._expiry;
    } //-- int getExpiry() 

    /**
     * Returns the value of field 'handle'.
     * 
     * @return String
     * @return the value of field 'handle'.
     */
    public java.lang.String getHandle()
    {
        return this._handle;
    } //-- java.lang.String getHandle() 

    /**
     * Returns the value of field 'maxFeatures'.
     * 
     * @return int
     * @return the value of field 'maxFeatures'.
     */
    public int getMaxFeatures()
    {
        return this._maxFeatures;
    } //-- int getMaxFeatures() 

    /**
     * Returns the value of field 'outputFormat'.
     * 
     * @return String
     * @return the value of field 'outputFormat'.
     */
    public java.lang.String getOutputFormat()
    {
        return this._outputFormat;
    } //-- java.lang.String getOutputFormat() 

    /**
     * Method getQuery
     * 
     * 
     * 
     * @param index
     * @return Query
     */
    public nl.b3p.xml.wfs.v100.transaction.Query getQuery(int index)
        throws java.lang.IndexOutOfBoundsException
    {
        //-- check bounds for index
        if ((index < 0) || (index >= _queryList.size())) {
            throw new IndexOutOfBoundsException();
        }
        
        return (nl.b3p.xml.wfs.v100.transaction.Query) _queryList.get(index);
    } //-- nl.b3p.xml.wfs.v100.transaction.Query getQuery(int) 

    /**
     * Method getQuery
     * 
     * 
     * 
     * @return Query
     */
    public nl.b3p.xml.wfs.v100.transaction.Query[] getQuery()
    {
        int size = _queryList.size();
        nl.b3p.xml.wfs.v100.transaction.Query[] mArray = new nl.b3p.xml.wfs.v100.transaction.Query[size];
        for (int index = 0; index < size; index++) {
            mArray[index] = (nl.b3p.xml.wfs.v100.transaction.Query) _queryList.get(index);
        }
        return mArray;
    } //-- nl.b3p.xml.wfs.v100.transaction.Query[] getQuery() 

    /**
     * Method getQueryCount
     * 
     * 
     * 
     * @return int
     */
    public int getQueryCount()
    {
        return _queryList.size();
    } //-- int getQueryCount() 

    /**
     * Returns the value of field 'service'.
     * 
     * @return String
     * @return the value of field 'service'.
     */
    public java.lang.String getService()
    {
        return this._service;
    } //-- java.lang.String getService() 

    /**
     * Returns the value of field 'version'.
     * 
     * @return String
     * @return the value of field 'version'.
     */
    public java.lang.String getVersion()
    {
        return this._version;
    } //-- java.lang.String getVersion() 

    /**
     * Method hasExpiry
     * 
     * 
     * 
     * @return boolean
     */
    public boolean hasExpiry()
    {
        return this._has_expiry;
    } //-- boolean hasExpiry() 

    /**
     * Method hasMaxFeatures
     * 
     * 
     * 
     * @return boolean
     */
    public boolean hasMaxFeatures()
    {
        return this._has_maxFeatures;
    } //-- boolean hasMaxFeatures() 

    /**
     * Method isValid
     * 
     * 
     * 
     * @return boolean
     */
    public boolean isValid()
    {
        try {
            validate();
        }
        catch (org.exolab.castor.xml.ValidationException vex) {
            return false;
        }
        return true;
    } //-- boolean isValid() 

    /**
     * Method marshal
     * 
     * 
     * 
     * @param out
     */
    public void marshal(java.io.Writer out)
        throws org.exolab.castor.xml.MarshalException, org.exolab.castor.xml.ValidationException
    {
        
        Marshaller.marshal(this, out);
    } //-- void marshal(java.io.Writer) 

    /**
     * Method marshal
     * 
     * 
     * 
     * @param handler
     */
    public void marshal(org.xml.sax.ContentHandler handler)
        throws java.io.IOException, org.exolab.castor.xml.MarshalException, org.exolab.castor.xml.ValidationException
    {
        
        Marshaller.marshal(this, handler);
    } //-- void marshal(org.xml.sax.ContentHandler) 

    /**
     * Method removeQuery
     * 
     * 
     * 
     * @param vQuery
     * @return boolean
     */
    public boolean removeQuery(nl.b3p.xml.wfs.v100.transaction.Query vQuery)
    {
        boolean removed = _queryList.remove(vQuery);
        return removed;
    } //-- boolean removeQuery(nl.b3p.xml.wfs.v100.transaction.Query) 

    /**
     * Sets the value of field 'expiry'.
     * 
     * @param expiry the value of field 'expiry'.
     */
    public void setExpiry(int expiry)
    {
        this._expiry = expiry;
        this._has_expiry = true;
    } //-- void setExpiry(int) 

    /**
     * Sets the value of field 'handle'.
     * 
     * @param handle the value of field 'handle'.
     */
    public void setHandle(java.lang.String handle)
    {
        this._handle = handle;
    } //-- void setHandle(java.lang.String) 

    /**
     * Sets the value of field 'maxFeatures'.
     * 
     * @param maxFeatures the value of field 'maxFeatures'.
     */
    public void setMaxFeatures(int maxFeatures)
    {
        this._maxFeatures = maxFeatures;
        this._has_maxFeatures = true;
    } //-- void setMaxFeatures(int) 

    /**
     * Sets the value of field 'outputFormat'.
     * 
     * @param outputFormat the value of field 'outputFormat'.
     */
    public void setOutputFormat(java.lang.String outputFormat)
    {
        this._outputFormat = outputFormat;
    } //-- void setOutputFormat(java.lang.String) 

    /**
     * Method setQuery
     * 
     * 
     * 
     * @param index
     * @param vQuery
     */
    public void setQuery(int index, nl.b3p.xml.wfs.v100.transaction.Query vQuery)
        throws java.lang.IndexOutOfBoundsException
    {
        //-- check bounds for index
        if ((index < 0) || (index >= _queryList.size())) {
            throw new IndexOutOfBoundsException();
        }
        _queryList.set(index, vQuery);
    } //-- void setQuery(int, nl.b3p.xml.wfs.v100.transaction.Query) 

    /**
     * Method setQuery
     * 
     * 
     * 
     * @param queryArray
     */
    public void setQuery(nl.b3p.xml.wfs.v100.transaction.Query[] queryArray)
    {
        //-- copy array
        _queryList.clear();
        for (int i = 0; i < queryArray.length; i++) {
            _queryList.add(queryArray[i]);
        }
    } //-- void setQuery(nl.b3p.xml.wfs.v100.transaction.Query) 

    /**
     * Sets the value of field 'service'.
     * 
     * @param service the value of field 'service'.
     */
    public void setService(java.lang.String service)
    {
        this._service = service;
    } //-- void setService(java.lang.String) 

    /**
     * Sets the value of field 'version'.
     * 
     * @param version the value of field 'version'.
     */
    public void setVersion(java.lang.String version)
    {
        this._version = version;
    } //-- void setVersion(java.lang.String) 

    /**
     * Method unmarshal
     * 
     * 
     * 
     * @param reader
     * @return GetFeatureWithLockType
     */
    public static nl.b3p.xml.wfs.v100.transaction.GetFeatureWithLockType unmarshal(java.io.Reader reader)
        throws org.exolab.castor.xml.MarshalException, org.exolab.castor.xml.ValidationException
    {
        return (nl.b3p.xml.wfs.v100.transaction.GetFeatureWithLockType) Unmarshaller.unmarshal(nl.b3p.xml.wfs.v100.transaction.GetFeatureWithLockType.class, reader);
    } //-- nl.b3p.xml.wfs.v100.transaction.GetFeatureWithLockType unmarshal(java.io.Reader) 

    /**
     * Method validate
     * 
     */
    public void validate()
        throws org.exolab.castor.xml.ValidationException
    {
        org.exolab.castor.xml.Validator validator = new org.exolab.castor.xml.Validator();
        validator.validate(this);
    } //-- void validate() 

}
